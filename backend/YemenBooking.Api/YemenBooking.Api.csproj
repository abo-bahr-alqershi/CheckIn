<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <!-- توليد ملف توثيق XML لتعليقات Swagger -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- تجاهل تحذيرات عدم وجود تعليقات XML -->
    <NoWarn>1591</NoWarn>
    <EnableSourceControlManagerQueries>false</EnableSourceControlManagerQueries>
    <ContinuousIntegrationBuild>false</ContinuousIntegrationBuild>
    <!-- Frontend paths -->
    <FrontendDir>$(MSBuildThisFileDirectory)..\..\frontend</FrontendDir>
    <FrontendDist>$(FrontendDir)\dist</FrontendDist>
    <WebRoot>$(MSBuildProjectDirectory)\wwwroot\client</WebRoot>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="LiteDB" Version="5.0.21" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.11" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.11" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.11" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.11">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="8.0.2" />
    <PackageReference Include="Serilog.AspNetCore" Version="8.0.3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.8.1" />
    <PackageReference Include="FluentValidation" Version="12.0.0" />
    <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="12.0.0" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\YemenBooking.Application\YemenBooking.Application.csproj" />
    <ProjectReference Include="..\YemenBooking.Infrastructure\YemenBooking.Infrastructure.csproj" />
    <!-- <ProjectReference Include="..\AdvancedIndexingSystem\AdvancedIndexingSystem.Core\AdvancedIndexingSystem.Core.csproj" /> -->
  </ItemGroup>

  <!-- Ensure npm install runs once (if node_modules missing) -->
  <Target Name="NpmInstall" BeforeTargets="Build" Condition="Exists('$(FrontendDir)\package.json') and !Exists('$(FrontendDir)\node_modules')">
    <Message Text="Running npm ci in $(FrontendDir)" Importance="high" />
    <Exec Command="npm ci --no-audit --no-fund" WorkingDirectory="$(FrontendDir)" />
  </Target>

  <!-- Build frontend only when dist is missing -->
  <Target Name="BuildFrontend" BeforeTargets="CopyFrontendDist" DependsOnTargets="NpmInstall" Condition="Exists('$(FrontendDir)\package.json') and !Exists('$(FrontendDist)')">
    <Message Text="Building frontend in $(FrontendDir)" Importance="high" />
    <Exec Command="npm run build" WorkingDirectory="$(FrontendDir)" />
  </Target>

  <!-- Copy frontend dist into wwwroot/client during publish/build -->
  <Target Name="CopyFrontendDist" AfterTargets="Build">
    <Message Text="Copying frontend from $(FrontendDist) to $(WebRoot)" Importance="high" />
    <ItemGroup Condition="Exists('$(FrontendDist)')">
      <DistFiles Include="$(FrontendDist)\**\*.*" />
    </ItemGroup>
    <MakeDir Directories="$(WebRoot)" Condition="!Exists('$(WebRoot)')" />
    <Copy SourceFiles="@(DistFiles)" DestinationFiles="@(DistFiles->'$(WebRoot)\%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" Condition="Exists('$(FrontendDist)')" />
  </Target>

</Project>

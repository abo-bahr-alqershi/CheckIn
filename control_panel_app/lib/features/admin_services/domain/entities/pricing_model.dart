/// ðŸ“Š Ù†Ù…Ø§Ø°Ø¬ Ø§Ù„ØªØ³Ø¹ÙŠØ±
enum PricingModel {
  perBooking('PerBooking', 'Ù„ÙƒÙ„ Ø­Ø¬Ø²'),
  perDay('PerDay', 'Ù„ÙƒÙ„ ÙŠÙˆÙ…'),
  perPerson('PerPerson', 'Ù„ÙƒÙ„ Ø´Ø®Øµ'),
  perUnit('PerUnit', 'Ù„ÙƒÙ„ ÙˆØ­Ø¯Ø©'),
  perHour('PerHour', 'Ù„ÙƒÙ„ Ø³Ø§Ø¹Ø©'),
  fixed('Fixed', 'Ø³Ø¹Ø± Ø«Ø§Ø¨Øª');

  final String value;
  final String label;

  const PricingModel(this.value, this.label);

  /// ÙŠØ¯Ø¹Ù… Ù‚ÙŠÙŽÙ… Ø§Ù„ØªØ·Ø¨ÙŠÙ‚ ÙˆÙ‚ÙŠÙŽÙ… Ø§Ù„Ø¨Ø§Ùƒ Ø§Ù†Ø¯ (Fixed/PerPerson/PerNight)
  static PricingModel fromValue(String value) {
    final normalized = value.trim();
    // Try app values
    for (final model in PricingModel.values) {
      if (model.value == normalized) return model;
    }
    // Map backend enum strings
    switch (normalized) {
      case 'Fixed':
        return PricingModel.fixed;
      case 'PerPerson':
        return PricingModel.perPerson;
      case 'PerNight':
        return PricingModel.perDay; // Ø£Ù‚Ø±Ø¨ ØªÙ…Ø«ÙŠÙ„ Ù„Ø¯ÙŠÙ†Ø§
      default:
        return PricingModel.perBooking;
    }
  }
}